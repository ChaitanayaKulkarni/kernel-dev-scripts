From 218e10109f54c47da115301918504c96165ce29f Mon Sep 17 00:00:00 2001
From: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date: Sat, 11 Jul 2020 23:44:07 -0700
Subject: [PATCH 1/2] xarray: add xa_load_rcu() version

Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
---
 include/linux/xarray.h |  1 +
 lib/xarray.c           | 23 +++++++++++++++++++++++
 2 files changed, 24 insertions(+)

diff --git a/include/linux/xarray.h b/include/linux/xarray.h
index b4d70e7568b2..63970cceb930 100644
--- a/include/linux/xarray.h
+++ b/include/linux/xarray.h
@@ -345,6 +345,7 @@ struct xarray {
 #define DEFINE_XARRAY_ALLOC1(name) DEFINE_XARRAY_FLAGS(name, XA_FLAGS_ALLOC1)
 
 void *xa_load(struct xarray *, unsigned long index);
+void *xa_load_rcu(struct xarray *xa, unsigned long index);
 void *xa_store(struct xarray *, unsigned long index, void *entry, gfp_t);
 void *xa_erase(struct xarray *, unsigned long index);
 void *xa_store_range(struct xarray *, unsigned long first, unsigned long last,
diff --git a/lib/xarray.c b/lib/xarray.c
index e9e641d3c0c3..545740200dda 100644
--- a/lib/xarray.c
+++ b/lib/xarray.c
@@ -1312,6 +1312,29 @@ void *xa_load(struct xarray *xa, unsigned long index)
 }
 EXPORT_SYMBOL(xa_load);
 
+/**
+ * xa_load_rcu() - xa_load() without without rcu read locking. Caller is
+ * 		   responsible for handling rcu_read_lock() and
+ * 		   rcu_read_unlock().
+ * @xa: XArray.
+ * @index: index into array.
+ *
+ * Context: Any context. Caller is responsible for the RCU lock/unlock.
+ * Return: The entry at @index in @xa.
+ */
+
+void *xa_load_rcu(struct xarray *xa, unsigned long index)
+{
+	XA_STATE(xas, xa, index);
+	void *entry;
+
+	do {
+		entry = xas_load(&xas);
+		if (xa_is_zero(entry))
+			entry = NULL;
+	} while (xas_retry(&xas, entry));
+}
+
 static void *xas_result(struct xa_state *xas, void *curr)
 {
 	if (xa_is_zero(curr))
-- 
2.26.0

