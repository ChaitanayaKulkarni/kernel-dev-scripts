From ca213d8ab3bd9d270b661ae393efbbc176f614a4 Mon Sep 17 00:00:00 2001
From: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date: Sun, 21 Jun 2020 17:51:42 -0700
Subject: [PATCH 1/3] nvme: add a commong helper header for hos & target

Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
---
 drivers/nvme/host/nvmf-common.h | 43 +++++++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)
 create mode 100644 drivers/nvme/host/nvmf-common.h

diff --git a/drivers/nvme/host/nvmf-common.h b/drivers/nvme/host/nvmf-common.h
new file mode 100644
index 000000000000..f4a31913dd65
--- /dev/null
+++ b/drivers/nvme/host/nvmf-common.h
@@ -0,0 +1,43 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * NVMe Over Fabrics Target File I/O commands implementation.
+ * Copyright (c) 2019-2020 Western Digital Corporation or its
+ * affiliates.
+ *
+ * This common header file to share the code function between host and target.
+ */
+
+#ifndef _NVMF_COMMON_H
+#define _NVMF_COMMON_H
+/**
+ * nvme_ctrl_add_ns() - Store this ns entry in the controller's XArray follows
+ *                     the xa_insert scemantic.
+ * @xa: XArray for the controller to hold the namespace.
+ * @index: Namespace ID to be used in as a index in the xarray .
+ * @entry: pointer to the namespace structure.
+ * @gfp: Memory allocation flags for xa_insert.
+ *
+ * Follows the xa_insert semantic except prints the appropriate error message.
+ */
+static int nvme_xa_insert(struct xarray *xa, unsigned long index,
+			void *entry, gfp_t gfp)
+{
+	int ret;
+
+	ret = xa_insert(xa, index, entry, gfp);
+	if (!ret)
+		return 0;
+
+	switch (ret) {
+	case -ENOMEM:
+		pr_err("xa insert memory allocation failed\n");
+		break;
+	case -EBUSY:
+		pr_err("xa insert entry already present failed\n");
+		break;
+	default:
+		break;
+	}
+	return ret;
+}
+#endif /* _NVMF_H */
-- 
2.26.0

