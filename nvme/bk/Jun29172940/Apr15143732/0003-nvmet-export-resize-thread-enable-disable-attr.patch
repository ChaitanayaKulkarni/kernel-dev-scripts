From 9d2b568ac8d72d78b2057cd850e87ae642b1ac29 Mon Sep 17 00:00:00 2001
From: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
Date: Mon, 13 Apr 2020 17:22:33 -0700
Subject: [PATCH V3 3/7] nvmet: export resize thread enable-disable attr
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

We implement ns-revalidation feature as a mechanism and not as a policy
and allow user to set the policies. This also allows more flexibility to
user.

This patch adds a new configfs attributes so that user can enable/
disable resize monitor thread as and when needed by allowing user to
decide on the policy. Â 

Signed-off-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
---
 drivers/nvme/target/configfs.c | 34 ++++++++++++++++++++++++++++++++++
 drivers/nvme/target/nvmet.h    | 13 +++++++++++++
 2 files changed, 47 insertions(+)

diff --git a/drivers/nvme/target/configfs.c b/drivers/nvme/target/configfs.c
index b0e84027b3bc..f6fbe59fc60c 100644
--- a/drivers/nvme/target/configfs.c
+++ b/drivers/nvme/target/configfs.c
@@ -1050,8 +1050,42 @@ static struct configfs_group_operations nvmet_subsystems_group_ops = {
 	.make_group		= nvmet_subsys_make,
 };
 
+static ssize_t nvmet_control_group_control_resize_refresh_show(
+		struct config_item *item, char *page)
+{
+	return snprintf(page, PAGE_SIZE, "%u\n",
+			to_nvmet_control(item)->enable);
+}
+
+static ssize_t nvmet_control_group_control_resize_refresh_store(
+		struct config_item *item, const char *page, size_t count)
+{
+	struct nvmet_control_configfs *control = to_nvmet_control(item);
+	bool enable;
+
+	if (kstrtobool(page, &enable))
+		return -EINVAL;
+
+	mutex_lock(&monitor->control_lock);
+	control->enable = enable;
+	if (control->enable)
+		nvmet_enable_ns_resize_monitor();
+	else
+		nvmet_disable_ns_resize_monitor();
+	mutex_unlock(&monitor->control_lock);
+	return count;
+}
+
+CONFIGFS_ATTR(nvmet_control_group_, control_resize_refresh);
+
+static struct configfs_attribute *nvmet_control_group_attrs[] = {
+	&nvmet_control_group_attr_control_resize_refresh,
+	NULL,
+};
+
 static const struct config_item_type nvmet_subsystems_type = {
 	.ct_group_ops		= &nvmet_subsystems_group_ops,
+	.ct_attrs		= nvmet_control_group_attrs,
 	.ct_owner		= THIS_MODULE,
 };
 
diff --git a/drivers/nvme/target/nvmet.h b/drivers/nvme/target/nvmet.h
index 7fe6d705cbf1..796acd4226a1 100644
--- a/drivers/nvme/target/nvmet.h
+++ b/drivers/nvme/target/nvmet.h
@@ -62,6 +62,19 @@ struct nvmet_resize_monitor {
 
 extern struct nvmet_resize_monitor *monitor;
 
+struct nvmet_control_configfs {
+	bool                    enable;
+	struct config_group     group;
+};
+
+static inline struct nvmet_control_configfs *to_nvmet_control(
+		struct config_item *item)
+{
+	struct config_group *group = to_config_group(item);
+
+	return container_of(group, struct nvmet_control_configfs, group);
+}
+
 struct nvmet_ns {
 	struct list_head	dev_link;
 	struct percpu_ref	ref;
-- 
2.22.1

