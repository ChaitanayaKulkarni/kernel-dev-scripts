diff --git a/drivers/nvme/host/tcp.c b/drivers/nvme/host/tcp.c
index 273c1f2760a4..9c286d1f91e1 100644
--- a/drivers/nvme/host/tcp.c
+++ b/drivers/nvme/host/tcp.c
@@ -2215,14 +2215,13 @@ static void nvme_tcp_free_ctrl(struct nvme_ctrl *nctrl)
 	kfree(ctrl);
 }
 
-static void nvme_tcp_set_sg_null(struct nvme_command *c)
+static void nvme_set_cmd_sgl(struct nvme_command *c, u64 addr, u32 len, u8 type)
 {
 	struct nvme_sgl_desc *sg = &c->common.dptr.sgl;
 
-	sg->addr = 0;
-	sg->length = 0;
-	sg->type = (NVME_TRANSPORT_SGL_DATA_DESC << 4) |
-			NVME_SGL_FMT_TRANSPORT_A;
+	sg->addr = cpu_to_le64(addr);
+	sg->length = cpu_to_le32(len);
+	sg->type = type;
 }
 
 static void nvme_tcp_set_sg_inline(struct nvme_tcp_queue *queue,
@@ -2246,6 +2245,10 @@ static void nvme_tcp_set_sg_host_data(struct nvme_command *c,
 			NVME_SGL_FMT_TRANSPORT_A;
 }
 
+#define NVME_TCP_SGL_DESC_TRANSPORT_A \
+	((NVME_TRANSPORT_SGL_DATA_DESC << 4) | \
+			    NVME_SGL_FMT_TRANSPORT_A)
+
 static void nvme_tcp_submit_async_event(struct nvme_ctrl *arg)
 {
 	struct nvme_tcp_ctrl *ctrl = to_tcp_ctrl(arg);
@@ -2264,7 +2267,7 @@ static void nvme_tcp_submit_async_event(struct nvme_ctrl *arg)
 	cmd->common.opcode = nvme_admin_async_event;
 	cmd->common.command_id = NVME_AQ_BLK_MQ_DEPTH;
 	cmd->common.flags |= NVME_CMD_SGL_METABUF;
-	nvme_tcp_set_sg_null(cmd);
+	nvme_set_cmd_sgl(cmd, 0, 0, NVME_TCP_SGL_DESC_TRANSPORT_A);
 
 	ctrl->async_req.state = NVME_TCP_SEND_CMD_PDU;
 	ctrl->async_req.offset = 0;
@@ -2332,7 +2335,7 @@ static blk_status_t nvme_tcp_map_data(struct nvme_tcp_queue *queue,
 	c->common.flags |= NVME_CMD_SGL_METABUF;
 
 	if (!blk_rq_nr_phys_segments(rq))
-		nvme_tcp_set_sg_null(c);
+		nvme_set_cmd_sgl(cmd, 0, 0, NVME_TCP_SGL_DESC_TRANSPORT_A);
 	else if (rq_data_dir(rq) == WRITE &&
 	    req->data_len <= nvme_tcp_inline_data_size(req))
 		nvme_tcp_set_sg_inline(queue, c, req->data_len);
